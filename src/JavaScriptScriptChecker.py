'''
Created on 6 Mar 2020

@author: pipertod
'''
import re
from re import RegexFlag

class JavascriptScriptChecker(object):
    '''
    classdocs
    '''

    def __init__(self,base64RegexObject):
        '''
        Constructor
        '''
        self.lines = []
        self.startTagLineIndex = -1
        self.endTagLineIndex = -1
        self.startTagRegexObject = re.compile(r'<script.+?')
        self.endTagRegexObject = re.compile(r'(<\\/script>)')
        self.base64RegexObject = base64RegexObject
        self.suspicious = False
        self.language = "Javascript"
        self.fileExtensions = ["js","html","htm"]
        self.archiveExtensions = []
        
    def isFile(self, fileExtension):
        return (fileExtension in self.fileExtensions) 
        
    def isArchive(self, fileExtension):
        return (fileExtension in self.archiveExtensions)
        
    def getLanguage(self):
        return self.language
        
    def checkLine(self, lineText):
        nextIndex = len(self.lines)
        
        if self.isStartTag(lineText.lower()):
            self.startTagLineIndex = nextIndex
            
        if self.startTagLineIndex > -1 and self.endTagLineIndex == -1:
            #Start Tag has been detected but not an end tag
            self.lines.append(lineText)
            
            base64Results = self.base64RegexObject.search(lineText, RegexFlag.IGNORECASE)
            
            if base64Results:
                self.suspicious = True
            
        if self.isEndTag(lineText.lower()):
            self.startTagLineIndex = nextIndex
            
    def isStartTag(self, lineText):
        #startTagResults = self.startTagRegexObject.search(lineText, RegexFlag.IGNORECASE)
        #Replaced with Python check because its faster

        if "script" in lineText and "<" in lineText:
            return True
        
    def isEndTag(self, lineText):
        #endTagResults = self.endTagRegexObject.search(lineText, RegexFlag.IGNORECASE)
        #Replaced with Python check because its faster
        
        if "script" in lineText and "<" in lineText and "/" in lineText and "<" in lineText:
            return True
        
    def isSuspicious(self):
        return self.suspicious
    
    def getLines(self):
        return self.lines
        
        
        